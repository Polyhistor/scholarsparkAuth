name: Release Helm Chart

on:
  push:
    branches:
      - main
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Version from pyproject.toml
        id: version
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Using version: ${VERSION}"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Update Helm Chart Version
        run: |
          yq eval ".version = \"${{ steps.version.outputs.version }}\"" -i helm/Chart.yaml
          yq eval ".appVersion = \"${{ steps.version.outputs.version }}\"" -i helm/Chart.yaml

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository ,,}}/auth-service:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository ,,}}/auth-service:latest

      - name: Update Helm values.yaml
        run: |
          yq eval ".image.repository = \"ghcr.io/${{ github.repository }}/auth-service\"" -i helm/values.yaml
          yq eval ".image.tag = \"${{ steps.version.outputs.version }}\"" -i helm/values.yaml

      - name: Package and Push Chart
        run: |
          CHART_NAME=$(yq eval '.name' helm/Chart.yaml)
          helm package helm/
          helm push ${CHART_NAME}-*.tgz oci://ghcr.io/${GITHUB_REPOSITORY,,}/charts

      - name: Output Release Info
        if: success()
        run: |
          CHART_NAME=$(yq eval '.name' helm/Chart.yaml)
          echo "Successfully published chart ${CHART_NAME} version ${{ steps.version.outputs.version }}"
          echo "You can install this chart using:"
          echo "helm install my-release oci://ghcr.io/${GITHUB_REPOSITORY,,}/charts/${CHART_NAME} --version ${{ steps.version.outputs.version }}"
